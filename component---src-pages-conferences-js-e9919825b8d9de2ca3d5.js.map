{"version":3,"file":"component---src-pages-conferences-js-e9919825b8d9de2ca3d5.js","mappings":"sJAGaA,GAAOC,EAAAA,EAAAA,SAAOC,EAAAA,GAAV,yEAAGD,CAAH,8H,yDCDJE,E,KAAYF,QAAAA,GAAAA,WAAH,wEAAGA,CAAH,wB,0GCFtB,EAAe,IAA0B,yD,8BCSnCG,EAAQ,cACRC,EACJ,oEAEIC,GAAQL,EAAAA,EAAAA,SAAOD,EAAAA,GAAV,yEAAGC,CAAH,0CAKLM,GAAkBN,EAAAA,EAAAA,SAAOD,EAAAA,GAAV,mFAAGC,CAAH,kCAuLrB,EAlLoB,WAClB,OAKIO,EAAAA,EAAAA,gBAAe,cAJjBC,EADF,EACEA,KACAC,EAFF,EAEEA,IACAC,EAHF,EAGEA,cAC6BC,EAJ/B,EAIEC,mBAAsBC,MAyDxB,OACE,gBAAC,IAAD,KACE,gBAACC,EAAA,EAAD,CACEC,eAAgB,CACdC,KAAM,QAENC,OACE,qFAEJd,MAAOA,EACPe,KAAM,CACJ,CACEC,SAAU,eACVC,QAAS,iBAEX,CACEC,KAAM,cACND,QAAShB,GAEX,CACEe,SAAU,WACVC,QAASZ,EAAKc,aAAaC,QAAUC,GAEvC,CACEH,KAAM,gBACND,QAASZ,EAAKc,aAAaC,QAAUC,GAEvC,CACEL,SAAU,WACVC,QAASjB,GAEX,CACEgB,SAAU,iBACVC,QAAShB,GAEX,CACEe,SAAU,UACVC,QAAS,WAEX,CACED,SAAU,YACVC,QAAS,SAEX,CACEC,KAAM,eACND,QAAS,uBAEX,CACEC,KAAM,gBACND,QAASjB,GAEX,CACEkB,KAAM,sBACND,QAAShB,GAEX,CACEe,SAAU,YACVC,QAAS,sBAKf,gBAACf,EAAD,CACEoB,QAAQ,OACRC,QAAM,EACNC,MAAOlB,EAAImB,gBAAgBD,MAC3BE,IAAI,gCAGN,gBAAC,IAAD,CAAWC,MAAO,CAAEC,MAAO,kBAA3B,eAECpB,EAAYqB,KAAI,SAACC,GAAD,OACf,2BAASC,IAAKD,EAAWE,KAAKC,GAAIC,UAAU,cAC1C,0BAAKJ,EAAWE,KAAKhC,OAErB,yBAAI8B,EAAWE,KAAK/B,aAEnB6B,EAAWE,KAAKG,WACf,mDAC0B,IACvBL,EAAWE,KAAKG,WAAWN,KAAI,SAACO,GAAD,OAC9B,qBAAGC,KAAMD,EAAQ/B,MAAO+B,EAAQlB,UAGlC,KAEJ,gBAACf,EAAD,CACEmB,QAAQ,OACRC,QAAM,EACNe,MACE/B,EAAcG,MAAM6B,MAClB,qBAAGP,KAAgBd,OAASY,EAAWE,KAAKQ,aAC5CR,KAAKP,gBAAgBa,MAEzBZ,IAAKI,EAAWE,KAAKhC,QAGvB,0BACG8B,EAAWE,KAAKS,OAAOZ,KAAI,SAACa,GAAD,OAC1B,0BACE,qBAAGL,KAAMK,EAAMC,MACb,0BACGD,EAAMxB,KADT,OACmB,IAAI0B,KAAKF,EAAMG,MAAMC,uBAIzCJ,EAAMK,MAAQ,qBAAGV,KAAMK,EAAMK,OAAf,mBAA4C","sources":["webpack://root/./src/components/hero.component.js","webpack://root/./src/components/pageTitle.component.js","webpack://root/./src/assets/conferences/conference.jpg","webpack://root/./src/pages/conferences.js"],"sourcesContent":["import styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nexport const Hero = styled(Img)`\n  border-radius: 0.75rem;\n  box-shadow: 2px 4px 8px hsl(0deg 0% 0% / 0.25);\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n`\n","import styled from 'styled-components'\n\nexport const PageTitle = styled.h1`\n  font-size: 1.7rem;\n`\n","export default __webpack_public_path__ + \"static/conference-8c8d5e8658669ca9c5825baf1cb38949.jpg\";","import React from 'react'\nimport { Helmet } from 'react-helmet/es/Helmet'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport coverImage from '../assets/conferences/conference.jpg'\nimport { Hero } from '../components/hero.component'\nimport { Layout } from '../components/layout.component'\nimport { PageTitle } from '../components/pageTitle.component'\n\nconst title = 'Conferences'\nconst description =\n  'You can find here all the conferences I gave to different events.'\n\nconst Cover = styled(Hero)`\n  margin-bottom: 1rem;\n  max-height: 300px;\n`\n\nconst ConferenceImage = styled(Hero)`\n  height: auto;\n  max-width: 320px;\n`\n\nconst Conferences = () => {\n  const {\n    site,\n    img,\n    conferenceImg,\n    allConferencesJson: { edges: conferences },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          siteUrl\n        }\n      }\n      img: file(\n        relativePath: { eq: \"conferences/conference.jpg\" }\n        sourceInstanceName: { eq: \"static_images\" }\n      ) {\n        childImageSharp {\n          fluid(maxWidth: 1000) {\n            ...GatsbyImageSharpFluid_withWebp_noBase64\n          }\n        }\n      }\n      conferenceImg: allFile(\n        filter: { relativeDirectory: { in: \"conferences\" } }\n      ) {\n        edges {\n          node {\n            id\n            childImageSharp {\n              fixed(width: 320) {\n                ...GatsbyImageSharpFixed_withWebp_noBase64\n              }\n            }\n            name\n          }\n        }\n      }\n      allConferencesJson {\n        edges {\n          node {\n            id\n            title\n            imageName\n            description\n            events {\n              name\n              date\n              site\n              link\n              video\n            }\n            cospeakers {\n              name\n              site\n            }\n            lang\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en_US',\n\n          prefix:\n            'og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#',\n        }}\n        title={title}\n        meta={[\n          {\n            property: 'og:site_name',\n            content: 'Antoine Caron',\n          },\n          {\n            name: 'description',\n            content: description,\n          },\n          {\n            property: 'og:image',\n            content: site.siteMetadata.siteUrl + coverImage,\n          },\n          {\n            name: 'twitter:image',\n            content: site.siteMetadata.siteUrl + coverImage,\n          },\n          {\n            property: 'og:title',\n            content: title,\n          },\n          {\n            property: 'og:description',\n            content: description,\n          },\n          {\n            property: 'og:type',\n            content: 'website',\n          },\n          {\n            property: 'og:locale',\n            content: 'en_US',\n          },\n          {\n            name: 'twitter:card',\n            content: 'summary_large_image',\n          },\n          {\n            name: 'twitter:title',\n            content: title,\n          },\n          {\n            name: 'twitter:description',\n            content: description,\n          },\n          {\n            property: 'fb:app_id',\n            content: '235346886871248',\n          },\n        ]}\n      />\n\n      <Cover\n        loading=\"lazy\"\n        fadeIn\n        fluid={img.childImageSharp.fluid}\n        alt=\"Conference room photography\"\n      />\n\n      <PageTitle style={{ color: 'var(--header)' }}>Conferences</PageTitle>\n\n      {conferences.map((conference) => (\n        <article key={conference.node.id} className=\"conference\">\n          <h2>{conference.node.title}</h2>\n\n          <p>{conference.node.description}</p>\n\n          {conference.node.cospeakers ? (\n            <p>\n              With co-speaker help of{' '}\n              {conference.node.cospeakers.map((speaker) => (\n                <a href={speaker.site}>{speaker.name}</a>\n              ))}\n            </p>\n          ) : null}\n\n          <ConferenceImage\n            loading=\"lazy\"\n            fadeIn\n            fixed={\n              conferenceImg.edges.find(\n                ({ node }) => node.name === conference.node.imageName\n              ).node.childImageSharp.fixed\n            }\n            alt={conference.node.title}\n          />\n\n          <ul>\n            {conference.node.events.map((event) => (\n              <li>\n                <a href={event.link}>\n                  <h3>\n                    {event.name} on {new Date(event.date).toLocaleDateString()}\n                  </h3>\n                </a>\n\n                {event.video ? <a href={event.video}>Video recording</a> : null}\n              </li>\n            ))}\n          </ul>\n        </article>\n      ))}\n    </Layout>\n  )\n}\n\nexport default Conferences\n"],"names":["Hero","styled","Img","PageTitle","title","description","Cover","ConferenceImage","useStaticQuery","site","img","conferenceImg","conferences","allConferencesJson","edges","Helmet","htmlAttributes","lang","prefix","meta","property","content","name","siteMetadata","siteUrl","coverImage","loading","fadeIn","fluid","childImageSharp","alt","style","color","map","conference","key","node","id","className","cospeakers","speaker","href","fixed","find","imageName","events","event","link","Date","date","toLocaleDateString","video"],"sourceRoot":""}