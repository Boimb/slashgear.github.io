{"version":3,"file":"component---src-pages-conferences-js-20fa8540d54b1f4efe3a.js","mappings":"yLAAA,EAAe,IAA0B,yD,iBCQnCA,EAAK,cACLC,EAAW,oEAEXC,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAV,yEAAGD,CAAH,yBA6JX,EAzJoB,WAClB,OAIIE,EAAAA,EAAAA,gBAAe,cAHjBC,EADF,EACEA,KACAC,EAFF,EAEEA,IAC6BC,EAH/B,EAGEC,mBAAsBC,MAwCxB,OACE,uBACEC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,MAAO,oBACPC,UAAUC,EAAAA,EAAAA,IAAO,IACjBC,SAAYD,EAAAA,EAAAA,IAAO,KAAZ,KAAoBA,EAAAA,EAAAA,IAAO,EAAI,KAGxC,gBAAC,EAAAE,KAAD,CAAMC,GAAG,KAAT,gBACA,gBAACC,EAAA,EAAD,CACEC,eAAgB,CACdC,KAAM,QAENC,OACE,qFAEJvB,MAAOA,EACPwB,KAAM,CACJ,CACEC,SAAU,eACVC,QAAS,iBAEX,CACEC,KAAK,cACLD,QAASzB,GAEX,CACEwB,SAAU,WACVC,QAASpB,EAAKsB,aAAaC,QAAUC,GAEvC,CACEH,KAAM,gBACND,QAASpB,EAAKsB,aAAaC,QAAUC,GAEvC,CACEL,SAAS,WACTC,QAAS1B,GAEX,CACEyB,SAAS,iBACTC,QAASzB,GAEX,CACEwB,SAAS,UACTC,QAAS,WAEX,CACED,SAAU,YACVC,QAAS,SAEX,CACEC,KAAK,eACLD,QAAQ,uBAEV,CACEC,KAAK,gBACLD,QAAS1B,GAEX,CACE2B,KAAK,sBACLD,QAASzB,GAEX,CACEwB,SAAU,YACVC,QAAS,sBAIf,sBAAIf,MAAO,CAAEG,MAAO,kBAApB,eAEA,gBAACZ,EAAD,CACE6B,QAAQ,OACRC,QAAM,EACNC,MAAO1B,EAAI2B,gBAAgBD,MAC3BE,IAAI,gCAGL3B,EAAY4B,KAAI,SAACC,GAAD,OACf,2BAASC,IAAKD,EAAWE,KAAKC,GAAIC,UAAU,cAC1C,0BACE,qBAAGC,KAAML,EAAWE,KAAKI,MAAON,EAAWE,KAAKvC,OAChD,qBAAG0C,KAAML,EAAWE,KAAKK,MAAMtC,MAC5B,IADH,KAEK+B,EAAWE,KAAKK,MAAMjB,OAI7B,yBACG,IAAIkB,KAAKR,EAAWE,KAAKK,MAAME,MAAMC,qBACrCV,EAAWE,KAAKS,SAAW,qBAAuB,KAClDX,EAAWE,KAAKS,SACbX,EAAWE,KAAKS,SAASZ,KAAI,SAACa,GAAD,OAC3B,qBAAGP,KAAMO,EAAQ3C,MAAO2C,EAAQtB,SAElC,MAELU,EAAWE,KAAKW,OACf,uBACEC,wBAAyB,CAAEC,OAAQf,EAAWE,KAAKW,UAEnD","sources":["webpack://root/./src/assets/conferences/conference.jpg","webpack://root/./src/pages/conferences.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/conference-8c8d5e8658669ca9c5825baf1cb38949.jpg\";","import React from 'react'\nimport { rhythm } from '../utils/typography'\nimport { Helmet } from 'react-helmet/es/Helmet'\nimport { graphql, Link, useStaticQuery } from 'gatsby'\nimport coverImage from '../assets/conferences/conference.jpg'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nconst title = `Conferences`\nconst description = `You can find here all the conferences I gave to different events.`\n\nconst Cover = styled(Img)`\n  margin-bottom: 1rem;\n`\n\nconst Conferences = () => {\n  const {\n    site,\n    img,\n    allConferencesJson: { edges: conferences },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          siteUrl\n        }\n      }\n      img: file(\n        relativePath: { eq: \"conferences/conference.jpg\" }\n        sourceInstanceName: { eq: \"static_images\" }\n      ) {\n        childImageSharp {\n          fluid(maxWidth: 1000) {\n            ...GatsbyImageSharpFluid_withWebp_noBase64\n          }\n        }\n      }\n      allConferencesJson(sort: { fields: event___date, order: DESC }) {\n        edges {\n          node {\n            id\n            title\n            speakers {\n              name\n              site\n            }\n            lang\n            link\n            iframe\n            event {\n              date\n              name\n              site\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <div\n      style={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        color: 'var(--textNormal)',\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <Link to=\"/\">Back to blog</Link>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en_US',\n\n          prefix:\n            'og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#',\n        }}\n        title={title}\n        meta={[\n          {\n            property: 'og:site_name',\n            content: 'Antoine Caron',\n          },\n          {\n            name: `description`,\n            content: description,\n          },\n          {\n            property: 'og:image',\n            content: site.siteMetadata.siteUrl + coverImage,\n          },\n          {\n            name: 'twitter:image',\n            content: site.siteMetadata.siteUrl + coverImage,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: description,\n          },\n          {\n            property: `og:type`,\n            content: 'website',\n          },\n          {\n            property: 'og:locale',\n            content: 'en_US',\n          },\n          {\n            name: `twitter:card`,\n            content: `summary_large_image`,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: description,\n          },\n          {\n            property: 'fb:app_id',\n            content: '235346886871248',\n          },\n        ]}\n      />\n      <h1 style={{ color: 'var(--header)' }}>Conferences</h1>\n\n      <Cover\n        loading=\"lazy\"\n        fadeIn\n        fluid={img.childImageSharp.fluid}\n        alt=\"Conference room photography\"\n      />\n\n      {conferences.map((conference) => (\n        <article key={conference.node.id} className=\"conference\">\n          <h2>\n            <a href={conference.node.link}>{conference.node.title}</a>\n            <a href={conference.node.event.site}>\n              {' '}\n              - {conference.node.event.name}\n            </a>\n          </h2>\n\n          <p>\n            {new Date(conference.node.event.date).toLocaleDateString()}\n            {conference.node.speakers ? ' with the help of ' : null}\n            {conference.node.speakers\n              ? conference.node.speakers.map((speaker) => (\n                  <a href={speaker.site}>{speaker.name}</a>\n                ))\n              : null}\n          </p>\n          {conference.node.iframe ? (\n            <div\n              dangerouslySetInnerHTML={{ __html: conference.node.iframe }}\n            ></div>\n          ) : null}\n        </article>\n      ))}\n    </div>\n  )\n}\n\nexport default Conferences\n"],"names":["title","description","Cover","styled","Img","useStaticQuery","site","img","conferences","allConferencesJson","edges","style","marginLeft","marginRight","color","maxWidth","rhythm","padding","Link","to","Helmet","htmlAttributes","lang","prefix","meta","property","content","name","siteMetadata","siteUrl","coverImage","loading","fadeIn","fluid","childImageSharp","alt","map","conference","key","node","id","className","href","link","event","Date","date","toLocaleDateString","speakers","speaker","iframe","dangerouslySetInnerHTML","__html"],"sourceRoot":""}