{"version":3,"sources":["webpack:///./src/pages/conferences.js"],"names":["title","description","Conferences","conferences","useStaticQuery","allConferencesJson","edges","style","marginLeft","marginRight","color","maxWidth","rhythm","padding","to","htmlAttributes","lang","prefix","meta","property","content","name","map","conference","key","node","id","href","link","event","site","Date","date","toLocaleDateString","speakers","speaker","iframe","dangerouslySetInnerHTML","__html"],"mappings":"4FAAA,oEAMMA,EAAK,cACLC,EAAW,oEA2HFC,UAzHK,WAClB,IAC+BC,EAC3BC,yBAAe,cADjBC,mBAAsBC,MAyBxB,OACE,yBACEC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,MAAO,oBACPC,SAAUC,YAAO,IACjBC,QAAYD,YAAO,KAAZ,IAAoBA,YAAO,EAAI,KAGxC,kBAAC,OAAD,CAAME,GAAG,KAAT,gBACA,kBAAC,IAAD,CACEC,eAAgB,CACdC,KAAM,QAENC,OACE,qFAEJjB,MAAOA,EACPkB,KAAM,CACJ,CACEC,SAAU,eACVC,QAAS,iBAEX,CACEC,KAAK,cACLD,QAASnB,GAEX,CACEkB,SAAS,WACTC,QAASpB,GAEX,CACEmB,SAAS,iBACTC,QAASnB,GAEX,CACEkB,SAAS,UACTC,QAAS,WAEX,CACED,SAAU,YACVC,QAAS,SAEX,CACEC,KAAK,eACLD,QAAQ,uBAEV,CACEC,KAAK,gBACLD,QAASpB,GAEX,CACEqB,KAAK,sBACLD,QAASnB,GAEX,CACEkB,SAAU,YACVC,QAAS,sBAIf,wBAAIb,MAAO,CAAEG,MAAO,kBAApB,eAECP,EAAYmB,KAAI,SAACC,GAAD,OACf,6BAASC,IAAKD,EAAWE,KAAKC,IAC5B,4BACE,uBAAGC,KAAMJ,EAAWE,KAAKG,MAAOL,EAAWE,KAAKzB,OAChD,uBAAG2B,KAAMJ,EAAWE,KAAKI,MAAMC,MAC5B,IADH,KAEKP,EAAWE,KAAKI,MAAMR,OAI7B,2BACG,IAAIU,KAAKR,EAAWE,KAAKI,MAAMG,MAAMC,qBACrCV,EAAWE,KAAKS,SAAW,qBAAuB,KAClDX,EAAWE,KAAKS,SACbX,EAAWE,KAAKS,SAASZ,KAAI,SAACa,GAAD,OAC3B,uBAAGR,KAAMQ,EAAQL,MAAOK,EAAQd,SAElC,MAELE,EAAWE,KAAKW,OACf,yBACEC,wBAAyB,CAAEC,OAAQf,EAAWE,KAAKW,UAEnD","file":"component---src-pages-conferences-js-184bc79cedf6ff79935d.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { rhythm } from '../utils/typography'\nimport { Helmet } from 'react-helmet/es/Helmet'\nimport { graphql, Link, useStaticQuery } from 'gatsby'\n\nconst title = `Conferences`\nconst description = `You can find here all the conferences I gave to different events.`\n\nconst Conferences = () => {\n  const {\n    allConferencesJson: { edges: conferences },\n  } = useStaticQuery(graphql`\n    {\n      allConferencesJson(sort: { fields: event___date, order: DESC }) {\n        edges {\n          node {\n            id\n            title\n            speakers {\n              name\n              site\n            }\n            lang\n            link\n            iframe\n            event {\n              date\n              name\n              site\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <div\n      style={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        color: 'var(--textNormal)',\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <Link to=\"/\">Back to blog</Link>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en_US',\n\n          prefix:\n            'og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#',\n        }}\n        title={title}\n        meta={[\n          {\n            property: 'og:site_name',\n            content: 'Antoine Caron',\n          },\n          {\n            name: `description`,\n            content: description,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: description,\n          },\n          {\n            property: `og:type`,\n            content: 'website',\n          },\n          {\n            property: 'og:locale',\n            content: 'en_US',\n          },\n          {\n            name: `twitter:card`,\n            content: `summary_large_image`,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: description,\n          },\n          {\n            property: 'fb:app_id',\n            content: '235346886871248',\n          },\n        ]}\n      />\n      <h1 style={{ color: 'var(--header)' }}>Conferences</h1>\n\n      {conferences.map((conference) => (\n        <article key={conference.node.id}>\n          <h2>\n            <a href={conference.node.link}>{conference.node.title}</a>\n            <a href={conference.node.event.site}>\n              {' '}\n              - {conference.node.event.name}\n            </a>\n          </h2>\n\n          <p>\n            {new Date(conference.node.event.date).toLocaleDateString()}\n            {conference.node.speakers ? ' with the help of ' : null}\n            {conference.node.speakers\n              ? conference.node.speakers.map((speaker) => (\n                  <a href={speaker.site}>{speaker.name}</a>\n                ))\n              : null}\n          </p>\n          {conference.node.iframe ? (\n            <div\n              dangerouslySetInnerHTML={{ __html: conference.node.iframe }}\n            ></div>\n          ) : null}\n        </article>\n      ))}\n    </div>\n  )\n}\n\nexport default Conferences\n"],"sourceRoot":""}