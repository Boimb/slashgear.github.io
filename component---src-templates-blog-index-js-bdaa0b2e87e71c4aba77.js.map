{"version":3,"file":"component---src-templates-blog-index-js-bdaa0b2e87e71c4aba77.js","mappings":"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","sources":["webpack://root/./src/components/bio/bio.component.js","webpack://root/./src/components/foundation/foundation.component.js","webpack://root/./src/components/list.component.js","webpack://root/./src/components/markup/jsonLd.js","webpack://root/./src/components/markup/list.markup.js","webpack://root/./src/components/topTag.component.js","webpack://root/./src/templates/blog-index.js"],"sourcesContent":["import React from 'react'\n\n// Import typefaces\nimport 'typeface-montserrat'\n\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Wrapper = styled.div`\n  min-height: 150px;\n  margin-bottom: 2.5rem;\n\n  * > div {\n    margin-left: 0.5rem;\n  }\n`\n\nconst Image = styled(Img)`\n  float: left;\n  flex-shrink: 0;\n  border-radius: 50%;\n  box-shadow: 2px 4px 8px hsl(0deg 0% 0% / 0.25);\n`\n\nexport const Bio = ({ children, component = 'div' }) => {\n  const picture = useStaticQuery(graphql`\n    {\n      img: file(\n        relativePath: { eq: \"picture_of_me.jpg\" }\n        sourceInstanceName: { eq: \"static_images\" }\n      ) {\n        childImageSharp {\n          fixed(quality: 60, height: 150, width: 150, cropFocus: NORTH) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Wrapper id=\"bio\" as={component}>\n      <Image\n        fixed={picture.img.childImageSharp.fixed}\n        style={{ margin: '0 1.2rem 0 0' }}\n      />\n      {children}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Logo = styled(Img)`\n  flex-shrink: 0;\n  display: none !important;\n  border-radius: 50%;\n\n  transition: border-radius 300ms ease-in;\n\n  @media screen and (min-width: 1024px) {\n    display: inline-block !important;\n  }\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n  margin: 0 1rem;\n  padding-left: 0.2rem;\n  font-weight: 600;\n`\n\nconst Blocquote = styled.blockquote`\n  border: none;\n  margin: 0;\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  color: var(--textNormal);\n  box-shadow: none;\n  transition: all 200ms ease-in;\n  border-radius: 0.75rem;\n\n  &:hover,\n  &:focus {\n    background: #ea684c;\n    box-shadow: 2px 4px 8px hsl(0deg 0% 0% / 0.25);\n  }\n`\n\nconst textByLang = {\n  fr: {\n    text: \"Si vous aimez le contenu de ce blog, ou bien qu'il vous a aidé, s'il vous plait, considérez donner à la fondation Abbé Pierre que je soutiens personnellement.\",\n    quote:\n      '“On n’est jamais heureux que dans le bonheur qu’on donne. Donner, c’est recevoir.”',\n  },\n  en: {\n    text: 'If you like some content of this blog, or it has helped you, please consider donating to the Abbé Pierre Foundation which I personally support.',\n    quote:\n      '\"We are only ever happy in the happiness we give. To give is to receive.\"',\n  },\n}\n\nexport const Foundation = ({ lang = 'en' }) => {\n  const logo = useStaticQuery(graphql`\n    {\n      img: file(\n        relativePath: { eq: \"abbe_pierre.jpeg\" }\n        sourceInstanceName: { eq: \"static_images\" }\n      ) {\n        childImageSharp {\n          fixed(quality: 60, height: 150) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <StyledLink\n      id=\"foundation\"\n      to={`${lang === 'en' ? '' : '/fr'}/abbe-pierre`}\n    >\n      <TextWrapper>\n        {textByLang[lang].text}\n        <br />\n        <Blocquote>{textByLang[lang].quote}</Blocquote>\n      </TextWrapper>\n      <Logo\n        fixed={logo.img.childImageSharp.fixed}\n        alt=\"logo de la fondation abbé pierre\"\n      />\n    </StyledLink>\n  )\n}\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n`\n\nexport const ListItem = styled.li`\n  display: block;\n  margin: 0;\n  padding: 0;\n`\n","import React from 'react'\n\nexport const JsonLd = ({ content }) => (\n  <script\n    type=\"application/ld+json\"\n    dangerouslySetInnerHTML={{ __html: JSON.stringify(content) }}\n  />\n)\n","import React from 'react'\nimport { JsonLd } from './jsonLd'\n\nexport const ListMarkup = ({ posts = [], siteUrl }) => (\n  <JsonLd\n    content={{\n      '@context': 'https://schema.org',\n      '@type': 'ItemList',\n      itemListElement: posts.map((post, index) => ({\n        '@type': 'ListItem',\n        position: index + 1,\n        url: `${siteUrl}${post.node.fields.slug}`,\n      })),\n    }}\n  />\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport Link from 'gatsby-link'\n\nconst TagList = styled.aside`\n  display: none;\n  margin-top: 1rem;\n  padding: 24px;\n  flex: 1 0 30%;\n  \n  @media screen and (min-width: 768px) {\n    display: block;\n  }\n`\nconst Heading = styled.h2`\n  margin-top: 0.75rem;\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 1.1rem;\n  column-gap: 8px;\n`\n\nconst Tag = styled(Link)`\n  padding: 0.1rem 0.3rem;\n  background: var(--bg-secondary);\n  border-radius: 4px;\n  font-weight: 600;\n`\n\nconst Flex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 8px;\n  gap: 8px;\n`\n\nconst TOP_TAGS = ['javascript', 'webpack', 'github', 'react', 'bundler', 'action', 'git', 'CI'];\n\nconst i18n = {\n  fr: {\n    heading: 'Catégories'\n  },\n  en: {\n    heading: 'Top categories'\n  }\n}\n\nexport const TopTag = ({ lang = 'en' }) => <TagList>\n    <Heading>{i18n[lang].heading}</Heading>\n\n    <Flex>\n      {TOP_TAGS.map(tag => <Tag key={tag} to={`/${lang}/${tag}`}>#{tag}</Tag>)}\n    </Flex>\n  </TagList>","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport { Helmet } from 'react-helmet'\nimport styled from 'styled-components'\n\nimport { Bio } from '../components/bio/bio.component'\nimport { Layout } from '../components/layout.component'\nimport { rhythm } from '../utils/typography'\nimport { ListMarkup } from '../components/markup/list.markup'\nimport { Foundation } from '../components/foundation/foundation.component'\nimport { List, ListItem } from '../components/list.component'\nimport { TopTag } from '../components/topTag.component'\n\nconst Grid = styled(List)`\n  display: grid;\n  grid-auto-columns: minmax(10px, auto);\n  gap: 24px;\n  margin-top: 2rem;\n`\n\nconst GridItem = styled(ListItem)`\n  padding: 1rem 1.25rem;\n  border-radius: 0.75rem;\n\n  h2 {\n    margin-top: 0;\n    font-weight: 700;\n    font-size: ${rhythm(0.8)};\n  }\n`\n\nconst Main = styled.main`\n  display: flex;\n`\n\nconst BlogIndex = (props) => {\n  const config = get(props, 'data.config')\n  const posts = get(props, 'data.allMarkdownRemark.edges')\n  const siteTitle = get(config, 'frontmatter.title')\n  const description = get(config, 'frontmatter.description')\n  const bio = get(config, 'html')\n  const lang = props.pageContext.language\n\n  return (\n    <Layout location={props.location} config={config} lang={lang}>\n      <Helmet\n        htmlAttributes={{ lang }}\n        meta={[{ name: 'description', content: description }]}\n        title={siteTitle}\n      />\n\n      <ListMarkup\n        posts={posts}\n        siteUrl={props.data.site.siteMetadata.siteUrl}\n      />\n\n      <Bio component=\"header\">\n        <div dangerouslySetInnerHTML={{ __html: bio }} />\n      </Bio>\n\n      <Foundation lang={lang} />\n\n      <Main>\n        <Grid>\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug\n            return (\n              <GridItem key={node.fields.slug}>\n                <article>\n                  <h2\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                      {title}\n                    </Link>\n                  </h2>\n                  <span>\n                    <time dateTime={node.frontmatter.dateJson}>\n                      {node.frontmatter.date}\n                    </time>\n                  </span>\n                  <span style={{ margin: '0 1rem' }}>\n                    <span role=\"img\" aria-label=\"Time to read\">\n                      🕐\n                    </span>\n                    {node.timeToRead}&nbsp;min\n                  </span>\n                  <span>\n                    {(node.frontmatter.tags || []).map((tag) => (\n                      <Link\n                        style={{ marginRight: '0.5rem' }}\n                        key={tag}\n                        to={`/${props.pageContext.language}/${tag}`}\n                        data-testid=\"tag\"\n                      >\n                        #{tag}\n                      </Link>\n                    ))}\n                  </span>\n                </article>\n              </GridItem>\n            )\n          })}\n        </Grid>\n        <TopTag lang={lang}/>\n      </Main>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const blogIndexFragment = graphql`\n  query BlogPost($language: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    config: markdownRemark(\n      frontmatter: { language: { eq: $language }, type: { eq: \"language\" } }\n    ) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        language\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { language: { eq: $language }, type: { eq: null } }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            dateJson: date(formatString: \"YYYY-MM-DD\")\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Wrapper","styled","Image","Img","Bio","children","component","picture","useStaticQuery","id","as","fixed","img","childImageSharp","style","margin","Logo","TextWrapper","Blocquote","StyledLink","Link","textByLang","fr","text","quote","en","Foundation","lang","logo","to","alt","List","ListItem","JsonLd","content","type","dangerouslySetInnerHTML","__html","JSON","stringify","ListMarkup","posts","siteUrl","itemListElement","map","post","index","position","url","node","fields","slug","TagList","Heading","Tag","Flex","TOP_TAGS","i18n","heading","TopTag","tag","key","Grid","GridItem","rhythm","Main","props","config","get","siteTitle","description","bio","pageContext","language","location","Helmet","htmlAttributes","meta","name","title","data","site","siteMetadata","marginBottom","boxShadow","dateTime","frontmatter","dateJson","date","role","timeToRead","tags","marginRight"],"sourceRoot":""}