{"version":3,"sources":["webpack:///./src/components/tableOfContents.js","webpack:///./src/components/seo.js","webpack:///./src/templates/blog-post.js"],"names":["Aside","styled","aside","Heading","header","TableOfContents","tableOfContents","dangerouslySetInnerHTML","__html","SEO","description","lang","meta","title","image","site","metaDescription","siteMetadata","imageTags","property","content","siteUrl","src","name","width","height","htmlAttributes","titleTemplate","social","twitter","concat","defaultProps","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteBio","get","excerpt","pageContext","previous","next","location","config","translations","frontmatter","hero","childImageSharp","headings","length","style","scale","display","marginBottom","rhythm","marginTop","date","srcSet","fluid","srcSetWebp","sizes","type","loading","className","alt","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-eddaf2e5e648022b323a.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Aside = styled.aside`\n  display: none;\n  width: 400px;\n\n  nav {\n    margin-left: 0.5rem;\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  li {\n    margin-bottom: 0.5rem;\n    overflow: hidden;\n    white-space: nowrap;\n    ,wordwrap: normal;\n    text-overflow: ellipsis;\n  }\n\n  li > ul {\n    margin-top: 0;\n    margin-left: 1rem;\n  }\n\n  a {\n    color: currentColor;\n    box-shadow: none;\n  }\n\n  a:hover {\n    box-shadow: 0 1px 0 0 currentColor;\n  }\n\n  @media screen and (min-width: 1500px) {\n    & {\n      display: block;\n      position: fixed;\n      top: 7rem;\n      right: 2rem;\n      font-size: 0.8rem;\n    }\n  }\n`\n\nconst Heading = styled.header`\n  margin-bottom: 0.8rem;\n  font-weight: bold;\n  font-size: 1.1rem;\n`\n\nexport const TableOfContents = ({ tableOfContents }) => {\n  return (\n    <Aside>\n      <Heading>Table of content</Heading>\n      <nav dangerouslySetInnerHTML={{ __html: tableOfContents }} />\n    </Aside>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title, image }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  let imageTags = []\n\n  if (image) {\n    imageTags = [\n      {\n        property: 'og:image',\n        content: site.siteMetadata.siteUrl + image.src,\n      },\n      {\n        name: 'twitter:image',\n        content: site.siteMetadata.siteUrl + image.src,\n      },\n      {\n        name: 'og:image:width',\n        content: image.width,\n      },\n      {\n        name: 'og:image:height',\n        content: image.height,\n      },\n    ]\n  }\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: 'og:locale',\n          content: lang,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        ...imageTags,\n        {\n          name: 'google-site-verification',\n          content: 'h1uQ_z8fdlLI60AmxP8vjy1H-bKSDlv0n5XolWfeDIo',\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  image: PropTypes.object,\n}\n\nexport default SEO\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport { rhythm, scale } from '../utils/typography'\nimport { TableOfContents } from '../components/tableOfContents'\nimport SEO from '../components/seo'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, `data.config.frontmatter.title`)\n    const siteBio = get(this, 'props.data.config.html')\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout\n        location={this.props.location}\n        config={this.props.data.config}\n        translations={post.frontmatter.translations}\n      >\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          lang={post.frontmatter.lang}\n          image={\n            post.frontmatter.hero\n              ? post.frontmatter.hero.childImageSharp.image\n              : null\n          }\n        />\n        <h1>{post.frontmatter.title}</h1>\n        {post.headings.length > 1 && (\n          <TableOfContents tableOfContents={post.tableOfContents} />\n        )}\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: 'block',\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        {post.frontmatter.hero && (\n          <picture>\n            <source\n              srcSet={post.frontmatter.hero.childImageSharp.fluid.srcSetWebp}\n              sizes=\"30vw\"\n              type=\"image/webp\"\n            />\n            <source\n              srcSet={post.frontmatter.hero.childImageSharp.fluid.srcSet}\n              sizes=\"30vw\"\n              type=\"image/png\"\n            />\n            <img\n              loading=\"lazy\"\n              className=\"article-item__picture\"\n              src={post.frontmatter.hero.childImageSharp.fluid.src}\n              alt={post.frontmatter.title}\n              width=\"100%\"\n            />\n          </picture>\n        )}\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio>\n          <div dangerouslySetInnerHTML={{ __html: siteBio }} />\n        </Bio>\n\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!, $language: String!) {\n    config: markdownRemark(\n      frontmatter: { language: { eq: $language }, type: { eq: \"language\" } }\n    ) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        language\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      headings {\n        value\n      }\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        translations\n        description\n        hero {\n          childImageSharp {\n            fluid(maxWidth: 600) {\n              ...GatsbyImageSharpFluid_withWebp_noBase64\n            }\n            image: fixed(\n              fit: COVER\n              width: 1080\n              jpegProgressive: true\n              jpegQuality: 60\n              height: 1080\n            ) {\n              src\n              height\n              width\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}