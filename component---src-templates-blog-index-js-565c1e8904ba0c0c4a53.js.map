{"version":3,"file":"component---src-templates-blog-index-js-565c1e8904ba0c0c4a53.js","mappings":"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","sources":["webpack://root/./src/components/bio/bio.component.js","webpack://root/./src/components/footer/footer.component.js","webpack://root/./src/components/fundation/fundation.component.js","webpack://root/./src/components/markup/list.markup.js","webpack://root/./src/templates/blog-index.js"],"sourcesContent":["import React from 'react'\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Wrapper = styled.div`\n  margin-bottom: 2.5rem;\n\n  * > div {\n    margin-left: 0.5rem;\n  }\n`\n\nconst Image = styled(Img)`\n  float: left;\n  flex-shrink: 0;\n`\n\nexport const Bio = ({ children }) => {\n  const picture = useStaticQuery(graphql`\n    {\n      img: file(\n        relativePath: { eq: \"picture_of_me.jpg\" }\n        sourceInstanceName: { eq: \"static_images\" }\n      ) {\n        childImageSharp {\n          fixed(quality: 60, height: 150, width: 150, cropFocus: NORTH) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Wrapper id=\"bio\">\n      <Image\n        fixed={picture.img.childImageSharp.fixed}\n        style={{ margin: '0 1.2rem 0 0' }}\n      />\n      {children}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nconst FooterWrapper = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 4rem;\n`\n\nconst SOCIAL_LINKS = {\n  Github: 'https://github.com/Slashgear',\n  Twitter: 'https://twitter.com/Slashgear_',\n  LinkedIn: 'https://www.linkedin.com/in/antoine-caron-7089788a',\n  DevTo: 'https://dev.to/slashgear_',\n  Medium: 'https://medium.com/@Slashgear_',\n}\n\nexport const Footer = () => (\n  <FooterWrapper>\n    <div>\n      {Object.keys(SOCIAL_LINKS)\n        .map((key) => (\n          <a key={key} href={SOCIAL_LINKS[key]}>\n            {key}\n          </a>\n        ))\n        .reduce((prev, curr) => [prev, ' • ', curr])}\n    </div>\n\n    <div>\n      <Link to=\"/rss.xml\">RSS</Link>\n    </div>\n  </FooterWrapper>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\nconst Logo = styled(Img)`\n  flex-shrink: 0;\n  display: none !important;\n\n  @media screen and (min-width: 1024px) {\n    display: inline-block !important;\n  }\n`\n\nconst TextWrapper = styled.div`\n  flex-grow: 1;\n  margin-right: 1rem;\n  padding-left: 0.2rem;\n`\n\nconst Blocquote = styled.blockquote`\n  border: none;\n  margin: 0;\n`\n\nconst Link = styled(OutboundLink)`\n  display: flex;\n  color: var(--textNormal);\n  box-shadow: none;\n  transition: all 300ms ease-in;\n  background: linear-gradient(to right, transparent 50%, #ea684c 50%);\n  background-size: 200% 100%;\n  background-position: left bottom;\n\n  &:hover,\n  &:focus {\n    background-position: right bottom;\n  }\n`\n\nconst textByLang = {\n  fr: {\n    text: \"Si vous aimez le contenu de ce blog, ou bien qu'il vous a aidé, s'il vous plait, considérez donner à la fondation Abbé Pierre que je soutiens personnellement.\",\n    quote:\n      '“On n’est jamais heureux que dans le bonheur qu’on donne. Donner, c’est recevoir.”',\n  },\n  en: {\n    text: 'If you like some content of this blog, or it has helped you, please consider donating to the Abbé Pierre Foundation which I personally support.',\n    quote:\n      '\"We are only ever happy in the happiness we give. To give is to receive.\"',\n  },\n}\n\nexport const Fundation = ({ lang = 'en' }) => {\n  const logo = useStaticQuery(graphql`\n    {\n      img: file(\n        relativePath: { eq: \"abbe_pierre.jpeg\" }\n        sourceInstanceName: { eq: \"static_images\" }\n      ) {\n        childImageSharp {\n          fixed(quality: 60, height: 150) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Link\n      id=\"foundation\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href=\"https://www.fondation-abbe-pierre.fr/\"\n    >\n      <TextWrapper>\n        {textByLang[lang].text}\n        <br />\n        <Blocquote>{textByLang[lang].quote}</Blocquote>\n      </TextWrapper>\n      <Logo\n        fixed={logo.img.childImageSharp.fixed}\n        alt=\"logo de la fondation abbé pierre\"\n      />\n    </Link>\n  )\n}\n","import React from 'react'\nimport { JsonLd } from './jsonLd'\n\nexport const ListMarkup = ({ posts = [], siteUrl }) => (\n  <JsonLd\n    content={{\n      '@context': 'https://schema.org',\n      '@type': 'ItemList',\n      itemListElement: posts.map((post, index) => ({\n        '@type': 'ListItem',\n        position: index + 1,\n        url: `${siteUrl}${post.node.fields.slug}`,\n      })),\n    }}\n  />\n)\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport { Helmet } from 'react-helmet'\nimport Img from 'gatsby-image'\n\nimport { Bio } from '../components/bio/bio.component'\nimport { Layout } from '../components/layout.component'\nimport { rhythm } from '../utils/typography'\nimport { Footer } from '../components/footer/footer.component'\nimport { ListMarkup } from '../components/markup/list.markup'\nimport { Fundation } from '../components/fundation/fundation.component'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const config = get(this, 'props.data.config')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n    const siteTitle = get(config, 'frontmatter.title')\n    const description = get(config, 'frontmatter.description')\n    const bio = get(config, 'html')\n    const lang = this.props.pageContext.language\n\n    return (\n      <Layout location={this.props.location} config={config}>\n        <Helmet\n          htmlAttributes={{ lang }}\n          meta={[{ name: 'description', content: description }]}\n          title={siteTitle}\n        />\n        <ListMarkup\n          posts={posts}\n          siteUrl={this.props.data.site.siteMetadata.siteUrl}\n        />\n        <Bio>\n          <div dangerouslySetInnerHTML={{ __html: bio }} />\n        </Bio>\n\n        <Fundation lang={lang} />\n\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                <time dateTime={node.frontmatter.dateJson}>\n                  {node.frontmatter.date}\n                </time>\n              </small>\n              <small style={{ margin: '0 1rem' }}>\n                <span role=\"img\" aria-label=\"Time to read\">\n                  🕐\n                </span>\n                {node.timeToRead} min\n              </small>\n              <small>\n                {(node.frontmatter.tags || []).map((tag) => (\n                  <Link\n                    style={{ marginRight: '0.5rem' }}\n                    key={tag}\n                    to={`/${this.props.pageContext.language}/${tag}`}\n                    data-testid=\"tag\"\n                  >\n                    #{tag}\n                  </Link>\n                ))}\n              </small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n              {node.frontmatter.hero && (\n                <Img\n                  fluid={node.frontmatter.hero.childImageSharp.fluid}\n                  alt={node.frontmatter.title}\n                />\n              )}\n            </article>\n          )\n        })}\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const blogIndexFragment = graphql`\n  query BlogPost($language: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    config: markdownRemark(\n      frontmatter: { language: { eq: $language }, type: { eq: \"language\" } }\n    ) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        language\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { language: { eq: $language }, type: { eq: null } }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            dateJson: date(formatString: \"YYYY-MM-DD\")\n            description\n            tags\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n                image: fixed(\n                  fit: COVER\n                  width: 1080\n                  jpegProgressive: true\n                  jpegQuality: 60\n                  height: 1080\n                ) {\n                  src\n                  height\n                  width\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Wrapper","styled","Image","Img","Bio","children","picture","useStaticQuery","id","fixed","img","childImageSharp","style","margin","FooterWrapper","SOCIAL_LINKS","Github","Twitter","LinkedIn","DevTo","Medium","Footer","Object","keys","map","key","href","reduce","prev","curr","Link","to","Logo","TextWrapper","Blocquote","OutboundLink","textByLang","fr","text","quote","en","Fundation","lang","logo","target","rel","alt","ListMarkup","posts","siteUrl","content","itemListElement","post","index","position","url","node","fields","slug","BlogIndex","render","config","get","this","siteTitle","description","bio","props","pageContext","language","location","htmlAttributes","meta","name","title","data","site","siteMetadata","dangerouslySetInnerHTML","__html","marginBottom","rhythm","boxShadow","dateTime","frontmatter","dateJson","date","role","timeToRead","tags","tag","marginRight","excerpt","hero","fluid","React"],"sourceRoot":""}