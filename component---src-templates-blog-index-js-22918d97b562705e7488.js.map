{"version":3,"file":"component---src-templates-blog-index-js-22918d97b562705e7488.js","mappings":"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","sources":["webpack://root/./src/components/bio/bio.component.js","webpack://root/./src/components/foundation/foundation.component.js","webpack://root/./src/components/markup/list.markup.js","webpack://root/./src/components/lang/otherLanguage.component.js","webpack://root/./src/templates/blog-index.js"],"sourcesContent":["import React from 'react'\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Wrapper = styled.div`\n  margin-bottom: 2.5rem;\n\n  * > div {\n    margin-left: 0.5rem;\n  }\n`\n\nconst Image = styled(Img)`\n  float: left;\n  flex-shrink: 0;\n`\n\nexport const Bio = ({ children }) => {\n  const picture = useStaticQuery(graphql`\n    {\n      img: file(\n        relativePath: { eq: \"picture_of_me.jpg\" }\n        sourceInstanceName: { eq: \"static_images\" }\n      ) {\n        childImageSharp {\n          fixed(quality: 60, height: 150, width: 150, cropFocus: NORTH) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Wrapper id=\"bio\">\n      <Image\n        fixed={picture.img.childImageSharp.fixed}\n        style={{ margin: '0 1.2rem 0 0' }}\n      />\n      {children}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Logo = styled(Img)`\n  flex-shrink: 0;\n  display: none !important;\n\n  @media screen and (min-width: 1024px) {\n    display: inline-block !important;\n  }\n`\n\nconst TextWrapper = styled.div`\n  flex-grow: 1;\n  margin-right: 1rem;\n  padding-left: 0.2rem;\n`\n\nconst Blocquote = styled.blockquote`\n  border: none;\n  margin: 0;\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  color: var(--textNormal);\n  box-shadow: none;\n  transition: all 300ms ease-in;\n  background: linear-gradient(to right, transparent 50%, #ea684c 50%);\n  background-size: 200% 100%;\n  background-position: left bottom;\n\n  &:hover,\n  &:focus {\n    background-position: right bottom;\n  }\n`\n\nconst textByLang = {\n  fr: {\n    text: \"Si vous aimez le contenu de ce blog, ou bien qu'il vous a aidé, s'il vous plait, considérez donner à la fondation Abbé Pierre que je soutiens personnellement.\",\n    quote:\n      '“On n’est jamais heureux que dans le bonheur qu’on donne. Donner, c’est recevoir.”',\n  },\n  en: {\n    text: 'If you like some content of this blog, or it has helped you, please consider donating to the Abbé Pierre Foundation which I personally support.',\n    quote:\n      '\"We are only ever happy in the happiness we give. To give is to receive.\"',\n  },\n}\n\nexport const Foundation = ({ lang = 'en' }) => {\n  const logo = useStaticQuery(graphql`\n    {\n      img: file(\n        relativePath: { eq: \"abbe_pierre.jpeg\" }\n        sourceInstanceName: { eq: \"static_images\" }\n      ) {\n        childImageSharp {\n          fixed(quality: 60, height: 150) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <StyledLink\n      id=\"foundation\"\n      to={`${lang === 'en' ? '' : '/fr'}/abbe-pierre`}\n    >\n      <TextWrapper>\n        {textByLang[lang].text}\n        <br />\n        <Blocquote>{textByLang[lang].quote}</Blocquote>\n      </TextWrapper>\n      <Logo\n        fixed={logo.img.childImageSharp.fixed}\n        alt=\"logo de la fondation abbé pierre\"\n      />\n    </StyledLink>\n  )\n}\n","import React from 'react'\nimport { JsonLd } from './jsonLd'\n\nexport const ListMarkup = ({ posts = [], siteUrl }) => (\n  <JsonLd\n    content={{\n      '@context': 'https://schema.org',\n      '@type': 'ItemList',\n      itemListElement: posts.map((post, index) => ({\n        '@type': 'ListItem',\n        position: index + 1,\n        url: `${siteUrl}${post.node.fields.slug}`,\n      })),\n    }}\n  />\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst buttonListByLang = [\n  {\n    code: 'fr',\n    title: 'Articles en Français',\n    path: '/fr/',\n  },\n  {\n    code: 'en',\n    title: 'Articles in English',\n    path: '/',\n  },\n]\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin-right: auto;\n  margin-bottom: 2.5rem;\n`\n\nconst LinkAsButton = styled.a`\n  display: block;\n  padding: 0.5rem;\n  color: white;\n  font-weight: 700;\n  background-color: #7e40c4;\n  border-radius: 4px;\n  box-shadow: none;\n`\n\nexport const OtherLanguage = ({ language = 'fr' }) => {\n  const buttons = buttonListByLang.filter(({ code }) => code !== language)\n\n  return (\n    <Wrapper>\n      {buttons.map((button) => (\n        <LinkAsButton\n          as={Link}\n          key={button.code}\n          to={button.path}\n          hrefLang={button.code}\n        >\n          {button.title}\n        </LinkAsButton>\n      ))}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport { Helmet } from 'react-helmet'\nimport Img from 'gatsby-image'\n\nimport { Bio } from '../components/bio/bio.component'\nimport { Layout } from '../components/layout.component'\nimport { rhythm } from '../utils/typography'\nimport { Footer } from '../components/footer/footer.component'\nimport { ListMarkup } from '../components/markup/list.markup'\nimport { Foundation } from '../components/foundation/foundation.component'\nimport { OtherLanguage } from '../components/lang/otherLanguage.component'\n\nconst BlogIndex = (props) => {\n  const config = get(props, 'data.config')\n  const posts = get(props, 'data.allMarkdownRemark.edges')\n  const siteTitle = get(config, 'frontmatter.title')\n  const description = get(config, 'frontmatter.description')\n  const bio = get(config, 'html')\n  const lang = props.pageContext.language\n\n  return (\n    <Layout location={props.location} config={config}>\n      <Helmet\n        htmlAttributes={{ lang }}\n        meta={[{ name: 'description', content: description }]}\n        title={siteTitle}\n      />\n\n      <ListMarkup\n        posts={posts}\n        siteUrl={props.data.site.siteMetadata.siteUrl}\n      />\n\n      <Bio>\n        <div dangerouslySetInnerHTML={{ __html: bio }} />\n      </Bio>\n\n      <OtherLanguage language={lang} />\n\n      <Foundation lang={lang} />\n\n      {posts.map(({ node }) => {\n        const title = get(node, 'frontmatter.title') || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <h3\n              style={{\n                marginBottom: rhythm(1 / 4),\n              }}\n            >\n              <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </h3>\n            <small>\n              <time dateTime={node.frontmatter.dateJson}>\n                {node.frontmatter.date}\n              </time>\n            </small>\n            <small style={{ margin: '0 1rem' }}>\n              <span role=\"img\" aria-label=\"Time to read\">\n                🕐\n              </span>\n              {node.timeToRead} min\n            </small>\n            <small>\n              {(node.frontmatter.tags || []).map((tag) => (\n                <Link\n                  style={{ marginRight: '0.5rem' }}\n                  key={tag}\n                  to={`/${props.pageContext.language}/${tag}`}\n                  data-testid=\"tag\"\n                >\n                  #{tag}\n                </Link>\n              ))}\n            </small>\n            <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            {node.frontmatter.hero && (\n              <Img\n                fluid={node.frontmatter.hero.childImageSharp.fluid}\n                alt={node.frontmatter.title}\n              />\n            )}\n          </article>\n        )\n      })}\n      <Footer />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const blogIndexFragment = graphql`\n  query BlogPost($language: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    config: markdownRemark(\n      frontmatter: { language: { eq: $language }, type: { eq: \"language\" } }\n    ) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        language\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { language: { eq: $language }, type: { eq: null } }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            dateJson: date(formatString: \"YYYY-MM-DD\")\n            description\n            tags\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n                image: fixed(\n                  fit: COVER\n                  width: 1080\n                  jpegProgressive: true\n                  jpegQuality: 60\n                  height: 1080\n                ) {\n                  src\n                  height\n                  width\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Wrapper","styled","Image","Img","Bio","children","picture","useStaticQuery","id","fixed","img","childImageSharp","style","margin","Logo","TextWrapper","Blocquote","StyledLink","Link","textByLang","fr","text","quote","en","Foundation","lang","logo","to","alt","ListMarkup","posts","siteUrl","content","itemListElement","map","post","index","position","url","node","fields","slug","buttonListByLang","code","title","path","LinkAsButton","OtherLanguage","language","buttons","filter","button","as","key","hrefLang","props","config","get","siteTitle","description","bio","pageContext","location","Helmet","htmlAttributes","meta","name","data","site","siteMetadata","dangerouslySetInnerHTML","__html","marginBottom","rhythm","boxShadow","dateTime","frontmatter","dateJson","date","role","timeToRead","tags","tag","marginRight","excerpt","hero","fluid"],"sourceRoot":""}