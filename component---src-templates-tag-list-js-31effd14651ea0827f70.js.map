{"version":3,"file":"component---src-templates-tag-list-js-31effd14651ea0827f70.js","mappings":"yJAGaA,EAAa,SAAC,GAAD,QAAGC,MAAAA,OAAH,MAAW,GAAX,EAAeC,EAAf,EAAeA,QAAf,OACxB,gBAAC,IAAD,CACEC,QAAS,CACP,WAAY,qBACZ,QAAS,WACTC,gBAAiBH,EAAMI,KAAI,SAACC,EAAMC,GAAP,MAAkB,CAC3C,QAAS,WACTC,SAAUD,EAAQ,EAClBE,IAAI,GAAIP,EAAUI,EAAKI,KAAKC,OAAOC,c,6YCiF3C,EAhFgB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAClCd,EAAQe,GAAAA,CAAID,EAAM,2BAExB,OACE,gBAAC,IAAD,CACEF,SAAUA,EACVI,OAAQ,CACNN,OAAQ,CACNC,KAAME,EAAYF,MAEpBM,YAAa,CACXC,MAAM,IAAKL,EAAYM,OAI3B,gBAACC,EAAA,EAAD,CACEC,eAAgB,CAAEC,KAAMT,EAAYU,UACpCC,KAAM,CACJ,CACEC,KAAM,cACNvB,QAAYoB,EAAKT,EAAYU,UAAUG,QAAQC,YAAxC,IACLd,EAAYM,MAIlBD,MACEL,EAAYM,IAAIS,OAAO,GAAGC,cAAgBhB,EAAYM,IAAIW,MAAM,GAD7D,IAEDR,EAAKT,EAAYU,UAAUG,QAAQR,QAEzC,gBAAC,IAAD,CAAYlB,MAAOA,EAAOC,QAASa,EAAKiB,KAAKC,aAAa/B,UACzDD,EAAMI,KAAI,YAAe,IAAZK,EAAW,EAAXA,KACNS,EAAQH,GAAAA,CAAIN,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACE,2BAASsB,IAAKxB,EAAKC,OAAOC,MACxB,sBACEuB,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3B,gBAAC,EAAAC,KAAD,CAAMH,MAAO,CAAEI,UAAW,QAAUC,GAAI9B,EAAKC,OAAOC,MACjDO,IAGL,6BACE,wBAAMsB,SAAU/B,EAAKQ,YAAYwB,UAC9BhC,EAAKQ,YAAYyB,OAGtB,yBAAOR,MAAO,CAAES,OAAQ,WACtB,wBAAMC,KAAK,MAAM,aAAW,gBAA5B,MAGCnC,EAAKoC,WAJR,QAMA,8BACIpC,EAAKQ,YAAY6B,MAAQ,IAAI1C,KAAI,SAACe,GAAD,OACjC,gBAAC,EAAAkB,KAAD,CACEH,MAAO,CAAEa,YAAa,UACtBd,IAAKd,EACLoB,GAAE,IAAM1B,EAAYU,SAAlB,IAA8BJ,GAHlC,IAKIA,OAIR,qBAAG6B,wBAAyB,CAAEC,OAAQxC,EAAKyC,WAC1CzC,EAAKQ,YAAYkC,MAChB,gBAAC,IAAD,CACEC,MAAO3C,EAAKQ,YAAYkC,KAAKE,gBAAgBD,MAC7CE,IAAK7C,EAAKQ,YAAYC,YAMhC,gBAAC,IAAD","sources":["webpack://root/./src/components/markup/list.markup.js","webpack://root/./src/templates/tag-list.js"],"sourcesContent":["import React from 'react'\nimport { JsonLd } from './jsonLd'\n\nexport const ListMarkup = ({ posts = [], siteUrl }) => (\n  <JsonLd\n    content={{\n      '@context': 'https://schema.org',\n      '@type': 'ItemList',\n      itemListElement: posts.map((post, index) => ({\n        '@type': 'ListItem',\n        position: index + 1,\n        url: `${siteUrl}${post.node.fields.slug}`,\n      })),\n    }}\n  />\n)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport get from 'lodash/get'\nimport { Link, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { Layout } from '../components/layout.component'\nimport { rhythm } from '../utils/typography'\nimport { Footer } from '../components/footer/footer.component'\nimport { ListMarkup } from '../components/markup/list.markup'\nimport lang from '../components/lang/lang.json'\n\nconst TagList = ({ location, pageContext, data }) => {\n  const posts = get(data, 'allMarkdownRemark.edges')\n\n  return (\n    <Layout\n      location={location}\n      config={{\n        fields: {\n          slug: pageContext.slug,\n        },\n        frontmatter: {\n          title: `#${pageContext.tag}`,\n        },\n      }}\n    >\n      <Helmet\n        htmlAttributes={{ lang: pageContext.language }}\n        meta={[\n          {\n            name: 'description',\n            content: `${lang[pageContext.language].tagList.description} ${\n              pageContext.tag\n            }`,\n          },\n        ]}\n        title={`${\n          pageContext.tag.charAt(0).toUpperCase() + pageContext.tag.slice(1)\n        } ${lang[pageContext.language].tagList.title}`}\n      />\n      <ListMarkup posts={posts} siteUrl={data.site.siteMetadata.siteUrl} />\n      {posts.map(({ node }) => {\n        const title = get(node, 'frontmatter.title') || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <h3\n              style={{\n                marginBottom: rhythm(1 / 4),\n              }}\n            >\n              <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </h3>\n            <small>\n              <time dateTime={node.frontmatter.dateJson}>\n                {node.frontmatter.date}\n              </time>\n            </small>\n            <small style={{ margin: '0 1rem' }}>\n              <span role=\"img\" aria-label=\"Time to read\">\n                üïê\n              </span>\n              {node.timeToRead} min\n            </small>\n            <small>\n              {(node.frontmatter.tags || []).map((tag) => (\n                <Link\n                  style={{ marginRight: '0.5rem' }}\n                  key={tag}\n                  to={`/${pageContext.language}/${tag}`}\n                >\n                  #{tag}\n                </Link>\n              ))}\n            </small>\n            <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            {node.frontmatter.hero && (\n              <Img\n                fluid={node.frontmatter.hero.childImageSharp.fluid}\n                alt={node.frontmatter.title}\n              />\n            )}\n          </article>\n        )\n      })}\n      <Footer />\n    </Layout>\n  )\n}\n\nexport default TagList\n\nexport const tagListFragment = graphql`\n  query TagList($language: String!, $tag: [String]) {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: {\n          language: { eq: $language }\n          type: { eq: null }\n          tags: { in: $tag }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            dateJson: date(formatString: \"YYYY-MM-DD\")\n            description\n            tags\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n                image: fixed(\n                  fit: COVER\n                  width: 1080\n                  jpegProgressive: true\n                  jpegQuality: 60\n                  height: 1080\n                ) {\n                  src\n                  height\n                  width\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["ListMarkup","posts","siteUrl","content","itemListElement","map","post","index","position","url","node","fields","slug","location","pageContext","data","get","config","frontmatter","title","tag","Helmet","htmlAttributes","lang","language","meta","name","tagList","description","charAt","toUpperCase","slice","site","siteMetadata","key","style","marginBottom","rhythm","Link","boxShadow","to","dateTime","dateJson","date","margin","role","timeToRead","tags","marginRight","dangerouslySetInnerHTML","__html","excerpt","hero","fluid","childImageSharp","alt"],"sourceRoot":""}