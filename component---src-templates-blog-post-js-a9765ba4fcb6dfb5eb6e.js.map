{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","lang","image","hero","childImageSharp","style","marginTop","rhythm","marginBottom","scale","display","date","srcSet","fluid","srcSetWebp","sizes","type","className","src","alt","width","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2OAuGeA,UA/FU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,QAClDC,KAAMX,EAAKQ,YAAYG,KACvBC,MAAOZ,EAAKQ,YAAYK,KAAOb,EAAKQ,YAAYK,KAAKC,gBAAgBF,MAAQ,OAE/E,iCACE,gCACE,wBACEG,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGflB,EAAKQ,YAAYH,OAEpB,uBACEU,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtBjB,EAAKQ,YAAYa,MAGnBrB,EAAKQ,YAAYK,MAChB,iCACE,4BACES,OAAQtB,EAAKQ,YAAYK,KAAKC,gBAAgBS,MAAMC,WACpDC,MAAM,OACNC,KAAK,eAEP,4BACEJ,OAAQtB,EAAKQ,YAAYK,KAAKC,gBAAgBS,MAAMD,OACpDG,MAAM,OACNC,KAAK,cAEP,yBACEC,UAAU,wBACVC,IAAK5B,EAAKQ,YAAYK,KAAKC,gBAAgBS,MAAMK,IACjDC,IAAK7B,EAAKQ,YAAYH,MACtByB,MAAM,WAKd,6BAASC,wBAAyB,CAAEC,OAAQhC,EAAKiC,QACjD,wBACElB,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLK,QAAQ,OACRc,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACG/B,GACC,kBAAC,OAAD,CAAMgC,GAAE,QAAUhC,EAASiC,OAAOC,KAAQC,IAAI,QAA9C,KACKnC,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAM+B,GAAE,QAAU/B,EAAKgC,OAAOC,KAAQC,IAAI,QACvClC,EAAKC,YAAYH,MADpB,WAaP,IAAMqC,EAAS","file":"component---src-templates-blog-post-js-a9765ba4fcb6dfb5eb6e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        lang={post.frontmatter.lang}\n        image={post.frontmatter.hero ? post.frontmatter.hero.childImageSharp.image : null}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n\n          {post.frontmatter.hero && (\n            <picture>\n              <source\n                srcSet={post.frontmatter.hero.childImageSharp.fluid.srcSetWebp}\n                sizes=\"30vw\"\n                type=\"image/webp\"\n              />\n              <source\n                srcSet={post.frontmatter.hero.childImageSharp.fluid.srcSet}\n                sizes=\"30vw\"\n                type=\"image/png\"\n              />\n              <img\n                className=\"article-item__picture\"\n                src={post.frontmatter.hero.childImageSharp.fluid.src}\n                alt={post.frontmatter.title}\n                width=\"100%\"\n              />\n            </picture>\n          )}\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={`posts${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`posts${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        hero {\n            childImageSharp {\n                fluid(maxWidth: 600) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n                image: fixed(fit: COVER, width: 1080, jpegProgressive: true, jpegQuality: 60, height: 1080) {\n                    src\n                    height\n                    width\n                }\n            }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}