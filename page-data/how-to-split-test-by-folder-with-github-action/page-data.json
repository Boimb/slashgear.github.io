{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/how-to-split-test-by-folder-with-github-action/",
    "result": {"data":{"site":{"siteMetadata":{"siteUrl":"https://blog.slashgear.dev"}},"config":{"html":"<p>Written by <strong>Antoine Caron</strong> who lives and works in Lyon (France) building useful things at <a href=\"https://www.bedrockstreaming.com/\">Bedrock</a>.\nYou should follow him <a href=\"https://twitter.com/Slashgear_\">on Twitter</a>.\nTake a look at <a href=\"/friends-you-should-follow\">my friends websites</a>.\nYou could also <a href=\"/conferences\">take a look at the conferences I gave</a>.\nIf you want to see my professional background, <a href=\"/resume\">my resume is available here</a>.</p>","fields":{"slug":"/"},"frontmatter":{"title":"Antoine Caron","language":"en"}},"markdownRemark":{"id":"a6435f5b-2fa4-5969-a085-5ed181d9c181","excerpt":"Once again, I gave myself a challenge to learn how to use Github Action.\nI tried to see if it was possible to dynamically launch a job for…","html":"<p>Once again, I gave myself a challenge to learn how to use Github Action.\nI tried to see if it was possible to dynamically launch a job for each folder in a directory.</p>\n<p>We often want to run tests in parallel to reduce the time of continuous integration.\nOften tools like <code class=\"language-text\">Jest</code> or <code class=\"language-text\">CucumberJS</code> have parallelization features, but these often face the limits of the power available on the machines on which you want to run them.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tests/\n  user/\n    foo.feature\n    bar.feature\n  account/\n    example.feature\n  live/\n    a.feature\n    video.feature</code></pre></div>\n<p>I wondered if it wouldn’t be more efficient to run the tests in parallel directly with the CI tool so that only small <em>runners</em> would be needed.\nIn the previous example, I would like to be able to run in parallel on a separate <em>runner</em> for each folder in <code class=\"language-text\">test/</code>.</p>\n<h2 id=\"a-solution-with-github-action\" style=\"position:relative;\"><a href=\"#a-solution-with-github-action\" aria-label=\"a solution with github action permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A Solution with <em>Github action</em></h2>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CI\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">directories</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># Job that list subdirectories</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">outputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">dir</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> steps.set<span class=\"token punctuation\">-</span>dirs.outputs.dir <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token comment\"># generate output name dir by using inner step output</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> set<span class=\"token punctuation\">-</span>dirs <span class=\"token comment\"># Give it an id to handle to get step outputs in the outputs key above</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>set<span class=\"token punctuation\">-</span>output name=dir<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>$(ls <span class=\"token punctuation\">-</span>d <span class=\"token important\">*/</span> <span class=\"token punctuation\">|</span> jq <span class=\"token punctuation\">-</span>R <span class=\"token punctuation\">-</span>s <span class=\"token punctuation\">-</span>c 'split(\"\\n\")<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">-1</span><span class=\"token punctuation\">]</span>')\"\n        <span class=\"token comment\"># Define step output named dir base on ls command transformed to JSON thanks to jq</span>\n  <span class=\"token key atrule\">loop</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>directories<span class=\"token punctuation\">]</span> <span class=\"token comment\"># Depends on previous job</span>\n    <span class=\"token key atrule\">strategy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matrix</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">dir</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>fromJson(needs.directories.outputs.dir)<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token comment\"># List matrix strategy from directories dynamically</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>matrix.dir<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>It’s up to you to adapt it to your needs!</p>","headings":[{"value":"A Solution with Github action"}],"wordCount":{"words":139},"tableOfContents":"<ul>\n<li><a href=\"#a-solution-with-github-action\">A Solution with <em>Github action</em></a></li>\n</ul>","frontmatter":{"title":"Github Action: How to parallelize tests dynamically by folder?","date":"December 01, 2020","dateJson":"2020-12-01","translations":["fr","comment-lancer-des-actions-github-en-simultane-sur-des-sous-dossiers"],"description":"Once again, I play with Github Action to see if it can answer the CI problems I may encounter in my work.","language":"en","tags":["github","action","CI","tutorial"],"hero":{"childImageSharp":{"fluid":{"aspectRatio":1.8987341772151898,"src":"/static/ff44249e8985e61cdbe670afb0139b18/4fe8c/github-actions.jpg","srcSet":"/static/ff44249e8985e61cdbe670afb0139b18/aabdf/github-actions.jpg 150w,\n/static/ff44249e8985e61cdbe670afb0139b18/9dc27/github-actions.jpg 300w,\n/static/ff44249e8985e61cdbe670afb0139b18/4fe8c/github-actions.jpg 600w,\n/static/ff44249e8985e61cdbe670afb0139b18/9842e/github-actions.jpg 900w,\n/static/ff44249e8985e61cdbe670afb0139b18/47498/github-actions.jpg 1200w","srcWebp":"/static/ff44249e8985e61cdbe670afb0139b18/ad85c/github-actions.webp","srcSetWebp":"/static/ff44249e8985e61cdbe670afb0139b18/e7487/github-actions.webp 150w,\n/static/ff44249e8985e61cdbe670afb0139b18/403a4/github-actions.webp 300w,\n/static/ff44249e8985e61cdbe670afb0139b18/ad85c/github-actions.webp 600w,\n/static/ff44249e8985e61cdbe670afb0139b18/210c1/github-actions.webp 900w,\n/static/ff44249e8985e61cdbe670afb0139b18/99238/github-actions.webp 1200w","sizes":"(max-width: 600px) 100vw, 600px"},"image":{"src":"/static/ff44249e8985e61cdbe670afb0139b18/10d63/github-actions.jpg"},"image16x9":{"src":"/static/ff44249e8985e61cdbe670afb0139b18/6edcc/github-actions.jpg"},"image4x3":{"src":"/static/ff44249e8985e61cdbe670afb0139b18/e14ae/github-actions.jpg"},"image1x1":{"src":"/static/ff44249e8985e61cdbe670afb0139b18/db124/github-actions.jpg"}}}}},"relatedPosts":{"edges":[{"node":{"excerpt":"Recently, I’ve been working a lot on industrializing this blog (maybe even a little too much).\nThis blog is my playground, I experiment, I…","fields":{"slug":"/how-to-automatically-handle-dependabot-pull-requests/"},"timeToRead":3,"frontmatter":{"title":"How to automatically merge dependabot pull requests with Github Actions ?","date":"May 10, 2022","dateJson":"2022-05-10","description":"Example with this blog implementation where dependabot PR automatically merge on default branch if e2e tests pass.","tags":["tutorial","github","gatsby","action","dependabot"]}}},{"node":{"excerpt":"Like last year, I am taking part in the advent of code 2021.\nAll my solution are opensource and free to reuse.\nI am doing it in Javascript…","fields":{"slug":"/advent-of-code-2021/"},"timeToRead":1,"frontmatter":{"title":"🎄 Advent of Code 2021 🎄: my solutions with JS","date":"December 04, 2021","dateJson":"2021-12-04","description":null,"tags":["javascript","oss","github","adventOfCode"]}}},{"node":{"excerpt":"I recently set up an end-to-end testing stack to make sure I wasn’t going to introduce any functional regressions to my blog.\nWith several…","fields":{"slug":"/how-to-setup-e2e-tests-with-webdriverio/"},"timeToRead":8,"frontmatter":{"title":"How to setup end to end tests with WebdriverIo on Github action ?","date":"August 13, 2021","dateJson":"2021-08-13","description":"For some time now I've been playing with github actions to see if I can easily reproduce behaviors I apply in my current CI tool. I wanted to parallelize tasks on each label of a pull request.","tags":["github","action","e2e","WebdriverIo"]}}},{"node":{"excerpt":"I decided this year to try the adventofcode2020 challenge in JS to see.\nI published the solutions I found in a public repository on Github…","fields":{"slug":"/advent-of-code-2020/"},"timeToRead":1,"frontmatter":{"title":"🎄 Advent of Code 2020 🎄: my solutions with JS","date":"December 04, 2020","dateJson":"2020-12-04","description":"I decided this year to try the adventofcode2020 challenge in JS to see. I published the solutions I found in a public repository on Github.","tags":["javascript","oss","github","adventOfCode"]}}}]}},"pageContext":{"slug":"/how-to-split-test-by-folder-with-github-action/","tags":["github","action","CI","tutorial"],"language":"en","previous":{"fields":{"slug":"/how-to-dynamically-run-step-on-each-github-pr-label/"},"frontmatter":{"title":"Github Action: How to dynamically run step on each PR label ?","tags":["github","action","CI","tutorial"]}},"next":{"fields":{"slug":"/advent-of-code-2020/"},"frontmatter":{"title":"🎄 Advent of Code 2020 🎄: my solutions with JS","tags":["javascript","oss","github","adventOfCode"]}}}},
    "staticQueryHashes": ["1264045386","1666466174","2564629789","4061151221","62118570"]}