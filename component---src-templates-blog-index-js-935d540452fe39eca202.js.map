{"version":3,"sources":["webpack:///./src/components/socials.js","webpack:///./src/components/listItemMarkup.js","webpack:///./src/templates/blog-index.js"],"names":["Footer","styled","footer","SOCIAL_LINKS","Github","Twitter","LinkedIn","DevTo","Medium","Socials","Object","keys","map","key","href","reduce","prev","curr","to","ListItemMarkup","posts","siteUrl","content","itemListElement","post","index","position","url","node","fields","slug","BlogIndex","render","config","get","this","siteTitle","description","bio","location","props","htmlAttributes","lang","pageContext","language","meta","name","title","data","site","siteMetadata","dangerouslySetInnerHTML","__html","style","marginBottom","rhythm","boxShadow","frontmatter","date","margin","role","aria-label","timeToRead","excerpt","hero","fluid","childImageSharp","alt","React","Component","blogIndexFragment"],"mappings":"4RAIMA,G,kDAASC,EAAOC,OAAV,qEAAGD,CAAH,kEAMNE,EAAe,CACnBC,OAAQ,+BACRC,QAAS,iCACTC,SAAU,qDACVC,MAAO,4BACPC,OAAQ,kCAGGC,EAAU,kBACrB,kBAACT,EAAD,KACE,6BACGU,OAAOC,KAAKR,GACVS,KAAI,SAAAC,GAAG,OACN,uBAAGA,IAAKA,EAAKC,KAAMX,EAAaU,IAC7BA,MAGJE,QAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,MAAOC,OAG1C,6BACE,kBAAC,OAAD,CAAMC,GAAG,YAAT,U,YC5BOC,EAAiB,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,EAAeC,EAAf,EAAeA,QAAf,OAC5B,kBAAC,IAAD,CACEC,QAAS,CACP,WAAY,qBACZ,QAAS,WACTC,gBAAiBH,EAAMR,KAAI,SAACY,EAAMC,GAAP,MAAkB,CAC3C,QAAS,WACTC,SAAUD,EAAQ,EAClBE,IAAI,GAAIN,EAAUG,EAAKI,KAAKC,OAAOC,a,ICCrCC,E,gLACJC,OAAA,WACE,IAAMC,EAASC,IAAIC,KAAM,qBACnBf,EAAQc,IAAIC,KAAM,sCAClBC,EAAYF,IAAID,EAAQ,qBACxBI,EAAcH,IAAID,EAAQ,2BAC1BK,EAAMJ,IAAID,EAAQ,QAExB,OACE,kBAAC,IAAD,CAAQM,SAAUJ,KAAKK,MAAMD,SAAUN,OAAQA,GAC7C,kBAAC,IAAD,CACEQ,eAAgB,CAAEC,KAAMP,KAAKK,MAAMG,YAAYC,UAC/CC,KAAM,CAAC,CAAEC,KAAM,cAAexB,QAASe,IACvCU,MAAOX,IAET,kBAAC,EAAD,CACEhB,MAAOA,EACPC,QAASc,KAAKK,MAAMQ,KAAKC,KAAKC,aAAa7B,UAE7C,kBAAC,IAAD,KACE,yBAAK8B,wBAAyB,CAAEC,OAAQd,MAEzClB,EAAMR,KAAI,YAAe,IAAZgB,EAAW,EAAXA,KACNmB,EAAQb,IAAIN,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACE,yBAAKjB,IAAKe,EAAKC,OAAOC,MACpB,wBACEuB,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUtC,GAAIU,EAAKC,OAAOC,MACjDiB,IAGL,+BAAQnB,EAAK6B,YAAYC,MACzB,2BAAOL,MAAO,CAAEM,OAAQ,WACtB,0BAAMC,KAAK,MAAMC,aAAW,gBAA5B,MAGCjC,EAAKkC,WAJR,QAMA,uBAAGX,wBAAyB,CAAEC,OAAQxB,EAAKmC,WAC1CnC,EAAK6B,YAAYO,MAChB,kBAAC,IAAD,CACEC,MAAOrC,EAAK6B,YAAYO,KAAKE,gBAAgBD,MAC7CE,IAAKvC,EAAK6B,YAAYV,YAMhC,kBAAC,EAAD,Q,GApDgBqB,IAAMC,WA4DjBC,GAFEvC,YAEe","file":"component---src-templates-blog-index-js-935d540452fe39eca202.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 4rem;\n`\n\nconst SOCIAL_LINKS = {\n  Github: 'https://github.com/Slashgear',\n  Twitter: 'https://twitter.com/Slashgear_',\n  LinkedIn: 'https://www.linkedin.com/in/antoine-caron-7089788a',\n  DevTo: 'https://dev.to/slashgear_',\n  Medium: 'https://medium.com/@Slashgear_',\n}\n\nexport const Socials = () => (\n  <Footer>\n    <div>\n      {Object.keys(SOCIAL_LINKS)\n        .map(key => (\n          <a key={key} href={SOCIAL_LINKS[key]}>\n            {key}\n          </a>\n        ))\n        .reduce((prev, curr) => [prev, ' ‚Ä¢ ', curr])}\n    </div>\n\n    <div>\n      <Link to=\"/rss.xml\">RSS</Link>\n    </div>\n  </Footer>\n)\n","import React from 'react'\nimport { JsonLd } from './jsonLd'\n\nexport const ListItemMarkup = ({ posts = [], siteUrl }) => (\n  <JsonLd\n    content={{\n      '@context': 'https://schema.org',\n      '@type': 'ItemList',\n      itemListElement: posts.map((post, index) => ({\n        '@type': 'ListItem',\n        position: index + 1,\n        url: `${siteUrl}${post.node.fields.slug}`,\n      })),\n    }}\n  />\n)\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport Img from 'gatsby-image'\n\nimport Bio from '../components/bio'\nimport { Layout } from '../components/layout'\nimport { rhythm } from '../utils/typography'\nimport { Socials } from '../components/socials'\nimport { ListItemMarkup } from '../components/listItemMarkup'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const config = get(this, 'props.data.config')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n    const siteTitle = get(config, 'frontmatter.title')\n    const description = get(config, 'frontmatter.description')\n    const bio = get(config, 'html')\n\n    return (\n      <Layout location={this.props.location} config={config}>\n        <Helmet\n          htmlAttributes={{ lang: this.props.pageContext.language }}\n          meta={[{ name: 'description', content: description }]}\n          title={siteTitle}\n        />\n        <ListItemMarkup\n          posts={posts}\n          siteUrl={this.props.data.site.siteMetadata.siteUrl}\n        />\n        <Bio>\n          <div dangerouslySetInnerHTML={{ __html: bio }} />\n        </Bio>\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <small style={{ margin: '0 1rem' }}>\n                <span role=\"img\" aria-label=\"Time to read\">\n                  üïê\n                </span>\n                {node.timeToRead} min\n              </small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n              {node.frontmatter.hero && (\n                <Img\n                  fluid={node.frontmatter.hero.childImageSharp.fluid}\n                  alt={node.frontmatter.title}\n                />\n              )}\n            </div>\n          )\n        })}\n        <Socials />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const blogIndexFragment = graphql`\n  query BlogPost($language: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    config: markdownRemark(\n      frontmatter: { language: { eq: $language }, type: { eq: \"language\" } }\n    ) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        language\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { language: { eq: $language }, type: { eq: null } }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n                image: fixed(\n                  fit: COVER\n                  width: 1080\n                  jpegProgressive: true\n                  jpegQuality: 60\n                  height: 1080\n                ) {\n                  src\n                  height\n                  width\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}